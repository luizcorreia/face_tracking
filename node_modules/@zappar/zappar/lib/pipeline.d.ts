import { zappar_pipeline_t } from "@zappar/zappar-cv";
import { Event } from "./event";
import { FaceMesh } from "./facemesh";
export declare class Pipeline {
    onFrameUpdate: Event;
    _onFrameUpdateInternal: Event;
    private _z;
    private _impl;
    private _lastFrameNumber;
    constructor();
    frameUpdate(): void;
    _getImpl(): zappar_pipeline_t;
    glContextSet(gl: WebGLRenderingContext): void;
    cameraFrameTextureGL(): WebGLTexture | undefined;
    cameraFrameTextureMatrix(renderWidth: number, renderHeight: number, mirror?: boolean): Float32Array;
    cameraFrameDrawGL(renderWidth: number, renderHeight: number, mirror?: boolean): void;
    cameraFrameUploadGL(): void;
    processGL(): void;
    cameraModel(): Float32Array;
    cameraPoseDefault(): Float32Array;
    cameraPoseWithAttitude(mirror?: boolean): Float32Array;
    cameraPoseWithOrigin(o: Float32Array): Float32Array;
    cameraFrameUserFacing(): boolean;
    drawFace(projectionMatrix: Float32Array, cameraMatrix: Float32Array, targetMatrix: Float32Array, m: FaceMesh): void;
}
