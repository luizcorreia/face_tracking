"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const zappar_1 = require("./zappar");
class InstantWorldTracker {
    constructor(_pipeline) {
        this._pipeline = _pipeline;
        this.anchor = {
            poseCameraRelative: mirror => this._anchorPoseCameraRelative(mirror),
            pose: (cameraPose, mirror) => this._anchorPose(cameraPose, mirror)
        };
        this._z = zappar_1.z();
        this._impl = this._z.instant_world_tracker_create(this._pipeline._getImpl());
    }
    destroy() {
        this._z.instant_world_tracker_destroy(this._impl);
    }
    _anchorPoseCameraRelative(mirror) {
        return this._z.instant_world_tracker_anchor_pose_camera_relative(this._impl, mirror === true);
    }
    _anchorPose(cameraPose, mirror) {
        return this._z.instant_world_tracker_anchor_pose(this._impl, cameraPose, mirror === true);
    }
    get enabled() {
        return this._z.instant_world_tracker_enabled(this._impl);
    }
    set enabled(e) {
        this._z.instant_world_tracker_enabled_set(this._impl, e);
    }
    setAnchorPoseFromCameraOffset(x, y, z, orientation) {
        this._z.instant_world_tracker_anchor_pose_set_from_camera_offset(this._impl, x, y, z, orientation || 4 /* MINUS_Z_AWAY_FROM_USER */);
    }
}
exports.InstantWorldTracker = InstantWorldTracker;
const _identity = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
