import { LoadingManager as Manager } from 'three';
import * as CSS from 'csstype';
declare type OnProgress = ((url: string, loaded: number, total: number) => void) | undefined;
declare type OnLoad = (() => void) | undefined;
declare type OnError = ((url: string) => void) | undefined;
export interface LoaderStyle {
    container?: CSS.Properties;
    inner?: CSS.Properties;
    title?: CSS.Properties;
    progress?: CSS.Properties;
    progressValue?: CSS.Properties;
}
/**
 * Shows a loading bar based on number of assets loaded.
 * @remarks
 * This method overwrites the default 'onStart' behaviour, please use _onStart instead.
 */
export declare class LoadingManager extends Manager {
    containerDiv: HTMLElement;
    customStyle: LoaderStyle | undefined;
    private onStartCallback;
    constructor(style?: LoaderStyle, onLoad?: OnLoad, onProgress?: OnProgress, onError?: OnError);
    private updateLoader;
    readonly onStart: () => void;
    _onStart: (callback: Function) => void;
    removeDiv: () => void;
    private _initialiseDiv;
}
export {};
