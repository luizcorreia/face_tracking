import * as THREE from "three";
import { FaceMesh } from "@zappar/zappar";
export interface FaceMeshLoaderOptions {
    customModel?: string;
    fillMouth?: boolean;
    fillEyeLeft?: boolean;
    fillEyeRight?: boolean;
    fillNeck?: boolean;
}
export declare class FaceMeshLoader extends THREE.Loader {
    constructor(manager?: THREE.LoadingManager);
    load(options?: string | FaceMeshLoaderOptions, onLoad?: (i: FaceMesh) => void, onProgress?: () => void, onError?: () => void): FaceMesh;
    loadFace(options?: FaceMeshLoaderOptions, onLoad?: (i: FaceMesh) => void, onProgress?: () => void, onError?: () => void): FaceMesh;
    loadFullHeadSimplified(options?: FaceMeshLoaderOptions, onLoad?: (i: FaceMesh) => void, onProgress?: () => void, onError?: () => void): FaceMesh;
    parse(): void;
}
