"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const THREE = require("three");
const camera_1 = require("./camera");
class ImageAnchorGroup extends THREE.Group {
    constructor(_camera, imageTracker, anchorId) {
        super();
        this._camera = _camera;
        this.imageTracker = imageTracker;
        this.anchorId = anchorId;
        this.isReady = false;
        // We'll be updating this Group's matrix ourselves from the Zappar library
        this.matrixAutoUpdate = false;
    }
    updateMatrixWorld(force) {
        if (!this.currentAnchor || !this.imageTracker.visible.has(this.currentAnchor)) {
            // No current anchor, or current anchor isn't visible
            if (this.anchorId) {
                this.currentAnchor = this.imageTracker.anchors.get(this.anchorId);
            }
            else {
                this.currentAnchor = this.imageTracker.visible.values().next().value;
            }
        }
        if (this.currentAnchor)
            this.matrix.fromArray(this.currentAnchor.pose(this._camera.rawPose, this._camera.currentMirrorMode === camera_1.CameraMirrorMode.Poses));
        super.updateMatrixWorld(force);
    }
}
exports.ImageAnchorGroup = ImageAnchorGroup;
