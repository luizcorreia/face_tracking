"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const UAParser = require("ua-parser-js");
var EmbeddedVideoImplementation;
(function (EmbeddedVideoImplementation) {
    EmbeddedVideoImplementation[EmbeddedVideoImplementation["OBJECT_URL"] = 0] = "OBJECT_URL";
    EmbeddedVideoImplementation[EmbeddedVideoImplementation["SRC_OBJECT"] = 1] = "SRC_OBJECT";
})(EmbeddedVideoImplementation = exports.EmbeddedVideoImplementation || (exports.EmbeddedVideoImplementation = {}));
exports.profile = {
    deviceMotionMutliplier: -1.0,
    blacklisted: false,
    showGyroPermissionsWarningIfNecessary: false,
    showSafariPermissionsResetIfNecessary: false,
    requestHighFrameRate: false,
    videoWidth: 640,
    videoHeight: 480,
    dataWidth: 320,
    dataHeight: 240,
    videoElementInDOM: false
};
window["zeeProfile"] = exports.profile;
let agent = new UAParser.UAParser();
switch (agent.getBrowser().name) {
    case "Chrome":
        break;
    case "Safari":
        exports.profile.deviceMotionMutliplier = 1.0;
        break;
    case "Mobile Safari":
        exports.profile.deviceMotionMutliplier = 1.0;
        let version = agent.getOS().version;
        if (version) {
            let versionParts = version.split(".");
            if (versionParts.length >= 2) {
                const majorVersion = parseInt(versionParts[0]);
                const minorVersion = parseInt(versionParts[1]);
                if (majorVersion < 11 ||
                    (majorVersion === 11 && minorVersion < 3)) {
                    exports.profile.blacklisted = true;
                }
                if (majorVersion < 12 ||
                    (majorVersion === 12 && minorVersion < 2)) {
                    exports.profile.videoElementInDOM = true;
                }
                if ((majorVersion === 12 && minorVersion >= 2) || (majorVersion >= 13))
                    exports.profile.showGyroPermissionsWarningIfNecessary = true;
                if (majorVersion >= 13) {
                    exports.profile.showSafariPermissionsResetIfNecessary = true;
                }
                if (((majorVersion >= 12 && minorVersion > 1) || (majorVersion >= 13)) &&
                    navigator.mediaDevices &&
                    navigator.mediaDevices.getSupportedConstraints &&
                    navigator.mediaDevices.getSupportedConstraints().frameRate) {
                    exports.profile.requestHighFrameRate = true;
                    // Avoid bug where iOS letterboxes 16:9 into 4:3 for high fps
                    exports.profile.videoHeight = 360;
                    exports.profile.dataHeight = 180;
                }
            }
        }
        console.log(version);
        break;
}
